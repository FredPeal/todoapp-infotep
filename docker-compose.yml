version: '3.8'

services:
  # Servicio de la aplicación Node.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: todo-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql-db
      - DB_USER=root
      - DB_PASSWORD=rootpassword
      - DB_NAME=todoapp
      - DB_PORT=3306
      - PORT=3000
    depends_on:
      mysql-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - todo-network
    volumes:
      - ./public:/app/public:ro
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Servicio de MySQL
  mysql-db:
    image: mysql:8.0
    container_name: todo-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=todoapp
      - MYSQL_USER=todouser
      - MYSQL_PASSWORD=todopassword
    ports:
      - "3307:3306"  # Puerto externo diferente para evitar conflictos
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - todo-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password

  # Servicio opcional de phpMyAdmin para administrar la base de datos
  # phpmyadmin:
  #   image: phpmyadmin:latest
  #   container_name: todo-phpmyadmin
  #   environment:
  #     - PMA_HOST=mysql-db
  #     - PMA_PORT=3306
  #     - PMA_USER=root
  #     - PMA_PASSWORD=rootpassword
  #   ports:
  #     - "8080:80"
  #   depends_on:
  #     mysql-db:
  #       condition: service_healthy
  #   restart: unless-stopped
  #   networks:
  #     - todo-network

# Red personalizada
networks:
  todo-network:
    driver: bridge

# Volúmenes persistentes
volumes:
  mysql_data:
    driver: local